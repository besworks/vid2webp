#!/bin/bash

if [ -z "$1" ]; then
  echo "missing input file parameter"
  exit 1
fi

if [ ! -f "$1" ]; then
  echo "$1 not found"
  exit 1
fi

function get_next_filename() {
    local base="${1%.*}"
    local ext="${1##*.}"
    local newname="$1"
    local counter=1

    while [[ -f "$newname" ]]; do
        newname="${base}-${counter}.${ext}"
        ((counter++))
    done

    echo "$newname"
}

if [ ! -z "$4" ]; then
  out="$4.webp"
else
  dir=$(dirname "$1")
  out=$(basename "$1")
  out="$dir/${out%.*}.webp"
  out=$(get_next_filename "$out") 
fi

start=""
end=""

if [ ! -z "$2" ]; then
  start="-ss $2 "
fi

if [ ! -z "$3" ]; then
  end="-to $3 "
fi

if [ -z "$SAMPLE" ]; then
  sample="$start"
else
  sample="-ss ${SAMPLE:-1}"
fi

scale=${SCALE:-1}
fps=${FPS:-20}
frames=${FRAMES:-10}

crop=$(ffmpeg  $sample -i "$1" -vframes $frames -vf cropdetect -f null - 2>&1 | grep -m 1 -oP 'crop=\K[0-9:]+')

if [ -z "$crop" ]; then
  echo "cropdetect failed"
  exit 1
fi

width=$(echo "$crop" | cut -d':' -f1)
width=$(echo "$width * $scale" | bc)

height=$(echo "$crop" | cut -d':' -f2)
height=$(echo "$height * $scale" | bc)

if [ -z "$width" ] || [ -z "$height" ]; then
  echo "scaling failed"
  exit 1
fi

if [ "$height" -gt "$width" ]; then
  scale="-2:$height"
else
  scale="$width:-2"
fi

# NOTE: fps=fps= is not a typo
ffmpeg -i "$1" $start $end -loop 1 -an -vf crop="$crop",scale="$scale",fps=fps="$fps" "$out"
